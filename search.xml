<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>给hexo文章添加查询功能</title>
      <link href="/2022/12/23/%E7%BB%99hexo%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E6%9F%A5%E8%AF%A2%E5%8A%9F%E8%83%BD/"/>
      <url>/2022/12/23/%E7%BB%99hexo%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E6%9F%A5%E8%AF%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>使用插件 <code>hexo-generator-search</code> ，这个插件可以从你的Hexo blog中生成一个xml/json文件用于搜索。</p><h4 id="1-插件下载，在博客根目录下执行下列命令："><a href="#1-插件下载，在博客根目录下执行下列命令：" class="headerlink" title="1. 插件下载，在博客根目录下执行下列命令："></a>1. 插件下载，在博客根目录下执行下列命令：</h4><p>注意：<code>windows</code> 电脑命令行推荐使用 <code>Powershell</code>，必须用管理员身份打开，然后 <code>cd</code> 到 <code>hexo</code> 根目录，执行下面命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>插件会下载在<code>/node_modules</code> 文件夹中，找到插件文件夹，可以看到 <code>README</code> 文档，推荐直接看 <code>README</code> 文档。</p><h4 id="2-修改全局配置文件"><a href="#2-修改全局配置文件" class="headerlink" title="2. 修改全局配置文件"></a>2. 修改全局配置文件</h4><p>打开 <code>hexo</code> 全局配置文件 <code>_config.yml</code> ，加入下面的代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span> <span class="string">./search.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure><ul><li><p>path - 索引文件的路径，默认是xml文件，可以改为json格式</p></li><li><p>field - 搜索的范围，哪些文件你想搜索？</p><ul><li>post - 只会包括博客中的所有post</li><li>page - 只会包括博客中的所有pages</li><li>all - 包括post和page</li></ul></li><li><p>content - 是否包括文章的所有内容。默认设置为 <code>true</code> ，如果设置为 <code>false</code> 的话，搜索结果就只包括标题和 <code>meta info</code> 。</p></li><li><p>template - 自定义XML模板</p></li><li><p>limit - 限制搜索的条目数</p></li></ul><h4 id="3-修改next主题配置文件"><a href="#3-修改next主题配置文件" class="headerlink" title="3. 修改next主题配置文件"></a>3. 修改next主题配置文件</h4><p>打开next主题的配置文件，找到<code>local_search</code>并且修改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>修改 <code>local_search</code> 的 <code>enable</code> 为 <code>true</code></p><p><code>top_n_per_article </code> 字段表示在每篇文章中显示的搜索结果数量，设成 -1 会显示每篇文章的所有搜索结果数量。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年度总结</title>
      <link href="/2022/12/18/2022%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
      <url>/2022/12/18/2022%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>章鱼噼的原罪</title>
      <link href="/2022/12/17/%E7%AB%A0%E9%B1%BC%E5%99%BC%E7%9A%84%E5%8E%9F%E7%BD%AA/"/>
      <url>/2022/12/17/%E7%AB%A0%E9%B1%BC%E5%99%BC%E7%9A%84%E5%8E%9F%E7%BD%AA/</url>
      
        <content type="html"><![CDATA[<p>主观评价：⭐⭐⭐⭐（一般）</p><p>其实也不是很致郁（现实或许比这致郁得多呢☺），而且怎么说呢，人物刻画得很单薄？除了哥哥以外，没有一个心理健康的小孩子，但是除了东君以外对于小孩子心理描绘的也不多，最后结局还有点仓促。但是最后那几页，有一句“无法挽回的心”还挺有感觉的，很多事情根本就是无解的，尤其是对于小孩子来说，不管重来多少遍也不会有什么改变，作者给出的答案是相互理解，但是我觉得emmmm。</p><p><img src="https://imghost-1316054127.cos.ap-shanghai.myqcloud.com/images/202212240002839.jpg"></p><p>谢谢你哥哥！哥哥的这段话我想是所有东亚小孩都想要听到的话。东亚父母对孩子的PUA是很常见的，成绩好你才是我的孩子，成绩不好你就是没人要的废物。尤其是东君这种有非常优秀的哥哥，如果成绩不好的话，在我们这边是会被比较到死的，这样环境下，当然很难成长出健全的人格。甚至在心理方面也会被比较，“明明都是一样的家庭环境，哥哥怎么就没有心理问题，成绩那么优秀，还交到了女朋友，怎么你就这么多问题，我看你就是不行哦”。</p><p>虽说所有人都是受害者，所有人都是施暴者。但最根本的问题还是原生家庭的问题。小孩子是很可怜的，一切都要仰仗他人，说话也不会有人当回事，事实上，小孩的世界远比大人想象的残酷。</p><p>还有一个很有意思的点是暴力的传递。真理奈被母亲暴力对待，与所以也只会用暴力对待别人，如果她有了孩子，会怎样对待孩子，结果是显而易见的。心理问题也会在代际之间传递，真理奈的母亲心理问题也很严重，或许她的原生家庭也有问题。</p><p><img src="https://imghost-1316054127.cos.ap-shanghai.myqcloud.com/images/202212240002358.jpg"></p><p>（最后吐槽一下，评论区小学生太多了……评论看得人血压上升）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 漫画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光死去的夏天</title>
      <link href="/2022/12/17/%E5%85%89%E6%AD%BB%E5%8E%BB%E7%9A%84%E5%A4%8F%E5%A4%A9/"/>
      <url>/2022/12/17/%E5%85%89%E6%AD%BB%E5%8E%BB%E7%9A%84%E5%A4%8F%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>评价：⭐⭐⭐⭐⭐</p><p>昨天看了《再见绘梨》，很厉害的漫画，然后发现『さようなら絵梨』和之前看的『タコピーの原罪』分别是2023年「这本漫画真厉害 男性榜」的第二名和第三名。而第一名居然是一本BL漫画！要知道这可是男性榜单。我当即就决定要康康这本『光が死んだ夏』，看了之后觉得，第一名，实至名归！</p><p>『タコピーの原罪』我不是很喜欢，觉得是比较普通的作品，对于人物的描写其实是比较粗糙的，结局也很仓促，『さようなら絵梨』很厉害，漫画技法很厉害，结构工整，但看完却并没给给我太大的触动。而这本『光が死んだ夏』看完后劲很大！还凭借一点点日语水平找了生肉看，现在还不更新我浑身就像有蚂蚁在爬，好久没有看过这样的漫画了！</p><p>作者的画工绝对在第一档，悬疑的节奏掌握的也很好，最关键是人物非常立体，情感描绘真实细腻，这是最最难得的，很能体会到佳纪的感情。</p><p><img src="https://imghost-1316054127.cos.ap-shanghai.myqcloud.com/images/202212232352047.jpg"></p><p>这里，在小村子或者小镇上生活的孩子应该都有同感，小镇的闲言碎语，就像是被一个庞大的不容置疑的“眼睛”凝视着，这个“眼睛”背后就是小镇社会的价值观。对于普通的向往自由的人来说，小镇就已经很压抑很窒息了，对于LGBT群体来说，感受到的伤害只会更多。</p><blockquote><p>在“这本漫画真厉害！”的官方网站上，公开了《这本漫画真厉害！2023》的结果  </p><p>【男性部门】 </p><p>01 《光死去的夏天》モクモクれん（KADOKAWA）　136pt </p><p>02 《再见绘梨》藤本タツキ（集英社）　134pt </p><p>03 《章鱼噼的原罪》 タイザン5（集英社）　109pt</p><p>04 《朱音落语》末永裕树（作）马上鹰将（画）（集英社）　93pt </p><p>05 《剧光假面》山口贵由（小学馆）　 79pt </p><p>06 《これ描いて死ね》とよ田みのる（小学馆）　72pt </p><p>07 《在超市后吸烟的故事》地主（スクウェア・エニックス）　67pt </p><p>08 《海贼王》尾田栄一郎（集英社）　64pt </p><p>09 《正相反的你与我》阿贺沢红茶（集英社）　56pt </p><p>10 《绿之歌 -收集群风-》高妍（KADOKAWA）　56pt  </p><p>【女性部门】 </p><p>01 《天幕のジャードゥーガル》トマトスープ（秋田书店）　120pt </p><p>02 《基因新娘》高野ひと深（祥伝社）　86pt </p><p>03 《まじめな会社员》冬野梅子（讲谈社）　81pt </p><p>04 《女の子がいる场所は》やまじえびね（KADOKAWA）　77pt </p><p>05 《星旅少年》坂月さかな（パイ インターナショナル）　72pt </p><p>06 《海波追寻的终幕》たらちねジョン（秋田书店）　58pt </p><p>07 《ブスなんて言わないで》とあるアラ子（讲谈社）　57pt </p><p>08 《比太阳更耀眼的星星》河原和音（集英社）　53pt </p><p>09 《现在多闻君是哪一面！？》师走ゆき（白泉社）　51pt </p><p>10 《わたしたちは无痛恋爱がしたい ～键垢女子と星屑男子とフェミおじさん～》泷波ユカリ（讲谈社）　48pt</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 漫画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年12月16日</title>
      <link href="/2022/12/16/2022%E5%B9%B412%E6%9C%8816%E6%97%A5/"/>
      <url>/2022/12/16/2022%E5%B9%B412%E6%9C%8816%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p><del>主要是学51单片机，折腾博客</del></p><p>主要看《光死去的夏天》😉，太好看啦！什么叫第一名的含金量（后仰）！没有《光死去的夏天》看，我浑身就像有蚂蚁在爬一样，很久没有看过后劲这么大的漫画了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再见绘梨</title>
      <link href="/2022/12/15/%E5%86%8D%E8%A7%81%E7%BB%98%E6%A2%A8/"/>
      <url>/2022/12/15/%E5%86%8D%E8%A7%81%E7%BB%98%E6%A2%A8/</url>
      
        <content type="html"><![CDATA[<p>看完了《再见绘梨》，短篇漫画，200页不到，但是完成度很高，很有藤本树的特色，就像看了一部两个小时的电影一样。</p><p>评分：⭐⭐⭐⭐⭐</p><p>在我看来评价一部漫画是好是坏只有一个指标，那就是是否有趣，有趣是对漫画的最高评价。《再见绘梨》无疑是一部非常有趣的漫画。藤本纯度很高，分镜很独特，电影感很强。自由、荒诞、还有点无厘头。</p><p>有些地方很有共鸣，比如说为什么要拍摄电影。我对于创作的看法跟这个有些相似，我觉得创作是抵御死亡的一种方式，我们是注定要死的，但是作品却可以代替你长久的活下去。</p><p><img src="https://imghost-1316054127.cos.ap-shanghai.myqcloud.com/images/202212240003271.jpg"></p><p>作品其实并不需要什么意义，只需要读者在看到某一个分镜的时候产生共鸣就好了。</p><p>父亲说出的金句：</p><blockquote><p>“所谓文艺创作就是去指出观众现实中存在的各种问题，来让他们笑出来、哭出来。因此，如果创作者自己在这个过程中没有任何触动，那将是不公平的。”</p></blockquote><p><img src="https://imghost-1316054127.cos.ap-shanghai.myqcloud.com/images/202212240003731.jpg"></p><blockquote><p>“不要试图理解它，去感受它！”</p></blockquote><p>藤本树的作品只要去体验，去感受就好，不要去分析它。中间好几次突然的转折，尤其是医院爆炸的那一幕，之前都酝酿好了情绪结果画风一转。</p><p>我很喜欢爆炸这个情节，两次爆炸都很喜欢（爆炸就是艺术！）。第一次是逃避不想面对，第二次是释然。</p><p>我看了一些分析认为绘梨不是吸血鬼，她在第一步电影结束的时候就确确实实死了，后面出现的绘梨是剪进去的，200年重生一次的吸血鬼，就是绘梨提到的“一抹奇幻色彩”。</p><hr><p>评价写的我头疼，语言能力太匮乏，可能连小学生都不如，以后还是不写了吧。（＞人＜；）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 漫画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年12月15日</title>
      <link href="/2022/12/15/2022%E5%B9%B412%E6%9C%8815%E6%97%A5/"/>
      <url>/2022/12/15/2022%E5%B9%B412%E6%9C%8815%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>两天搭建好了typecho，配置了handsome主题。我感觉……不如hexo😓。搭建好了之后感觉索然无味了。</p><p>本来觉得动态博客一定比静态博客要好玩，但是实际上hexo毫不逊色，简洁优雅。</p><p>现在的写作流是typora+PicGo写好了之后上传typecho+hexo，完美。</p><p>22点16分 晚上看了《再见绘梨》，太牛了，完成度很高，藤本树yyds！</p><p>23点50分 多试了试sm.ms，发现免费图床的速度太慢了……还是考虑下速度更快的图床。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年12月13日</title>
      <link href="/2022/12/13/2022%E5%B9%B412%E6%9C%8813%E6%97%A5/"/>
      <url>/2022/12/13/2022%E5%B9%B412%E6%9C%8813%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>19点34分</p><p>备案完成，吐槽一下，真的好麻烦，还要下载app，上传身份证，人脸识别，巴拉巴拉😓，中间不知道哪一步出问题就不给审核过，以后买国外服务器和域名了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试语法高亮</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;hello&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语法高亮OK</p><p>试一试图床</p><p><img src="https://imghost-1316054127.cos.ap-shanghai.myqcloud.com/images/202212232351400.jpg"></p><ul><li><input disabled type="checkbox"> 测试一下待办能不能正常显示</li><li><input checked disabled type="checkbox"> testing</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年12月6日</title>
      <link href="/2022/12/06/2022%E5%B9%B412%E6%9C%886%E6%97%A5/"/>
      <url>/2022/12/06/2022%E5%B9%B412%E6%9C%886%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>01点13分 买了域名<code>wantobe.top</code>，折腾阿里云服务器到现在，虽然是轻量应用型服务器，按理来说比较简单，但是资料太少，反而比较麻烦。出现好多问题，全靠自己摸索……</p><p>11点41分 公网 ip，80端口也开了，也<code>ping</code> 得通，但是在浏览器上还是无法访问，显示服务器拒绝连接。😡</p><p>知道为什么了，因为没有配置<code>Apache</code>，原来一直是只有<code>Ubuntu</code>一个操作系统😓。</p><p>重置系统了，把镜像改为<code>WordPress</code>，底层自动配置好环境Alibaba Cloud Linux3，PHP8.1，MySQL5.7，Nginx1.22。</p><p>成功了。</p><p>又不行了……没备案，大陆买的服务器都要备案。</p><blockquote><p>按照国家相关规定，大陆地域的服务器要备案，域名要实名制。</p><p>域名如果不是在国内商家注册的，就不用实名制了。</p><p>服务器是在大陆以外地区的，就不用网站备案了。</p><p>比如说你从国外域名商买了域名，又在阿里云买了美国服务器，这样就可以不用做网站备案了。</p></blockquote><p>15点46分 备案域名，这个教程很不错：<a href="https://www.bilibili.com/video/BV16K4y1N7G2/">【手把手教程】个人域名如何备案 阿里云ICP 网站备案</a>，不过域名实名认证后，需要等2-3天才能备案，网址放<a href="https://beian.aliyun.com/pcContainer/formpage?page=selfBa&pageAction=init">这里</a>，那就过两天再来吧。先用ip地址玩一玩wordpress。</p><p>（吐槽：这样建站好麻烦，域名实名+备案需要等好长时间）</p><p>17点55分 晚上打算复习一下SQL语法。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年12月1日</title>
      <link href="/2022/12/01/2022%E5%B9%B412%E6%9C%881%E6%97%A5/"/>
      <url>/2022/12/01/2022%E5%B9%B412%E6%9C%881%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>中午抓紧时间看了一些CJSON的讲解，感觉这个项目还是得深挖一下。😣</p><p>发现相比技术面，HR面更麻烦，今天HR面得一塌糊涂，应该准备一下常见HR面问题的话术。</p><p>得到了一个嵌入式岗位的面试机会，冲冲冲！</p><p>晚上看了一点蒋炎岩的操作系统，老师很年轻但是很牛（是卷王），讲得特别好！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月30日</title>
      <link href="/2022/11/30/2022%E5%B9%B411%E6%9C%8830%E6%97%A5/"/>
      <url>/2022/11/30/2022%E5%B9%B411%E6%9C%8830%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>上午做了一套C的面试题，觉得C还是有些掌握的不好，尤其是项目，还是得打磨一下。</p><p><strong>嵌入式还是得学，现在看岗位10个有7个都是嵌入式。</strong></p><p>中午学了一点K大幼幼班，开心😊，然后自己上手就被难倒了＞︿＜，感觉一幅简单的画都要细细画几个小时。</p><p>感觉冬天到了，今天下雪大降温，最近都见不到太阳了，心情不太好。想去找深广的工作，我看了一下，深圳现在的天气还是17℃，想去没有冬天的地方，最好还靠海（内陆人对海的向往），深圳完美符合，广州好吃的特别多，也很向往。</p><p>努力把吃完饭后的娱乐改为学习Python。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月29日</title>
      <link href="/2022/11/29/2022%E5%B9%B411%E6%9C%8829%E6%97%A5/"/>
      <url>/2022/11/29/2022%E5%B9%B411%E6%9C%8829%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>21点05分 </p><p>刷Leetcode每日一题：<a href="https://leetcode.cn/problems/minimum-changes-to-make-alternating-binary-string/">1758. 生成交替二进制字符串的最少操作数</a>，学到一个易错点：数字强制转换为字符，并不是直接转换为对应的数字字符，而是转换为ASCII码值相等的字符。</p><p>（Leetcode还是得每天都刷，一个月不刷手就生了）</p><p>22点34分</p><p>看韩立刚老师的计网，他是我看过把计网讲的最清楚的。他的PPT似乎是有参考国外的，看来也是吸收了国外的讲法。</p><p>打算把TCP这部分学完整理出一篇笔记发出来。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月27日</title>
      <link href="/2022/11/27/2022%E5%B9%B411%E6%9C%8827%E6%97%A5/"/>
      <url>/2022/11/27/2022%E5%B9%B411%E6%9C%8827%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>上午昨晚了中国铁塔的笔试题，考察的全是Java Web开发的知识，有很多框架的内容我都不会（鉴定为寄），看了一点点K大的抓型课（K大好厉害）。</p><p>下午看面经，计网还是有待加强，想个课系统的学一下。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月26日</title>
      <link href="/2022/11/26/2022%E5%B9%B411%E6%9C%8826%E6%97%A5/"/>
      <url>/2022/11/26/2022%E5%B9%B411%E6%9C%8826%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>今天白天一直在学习Shell，没什么进展，一个bug卡一天。</p><p>晚上准备看看计网，然后用wireshark抓包看看。</p><p>然后早点睡觉，明天得早起准备中国铁塔的笔试。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月25日</title>
      <link href="/2022/11/25/2022%E5%B9%B411%E6%9C%8825%E6%97%A5/"/>
      <url>/2022/11/25/2022%E5%B9%B411%E6%9C%8825%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>好几天没打卡了，最近找工作有点忙，上午整理笔记总结面经，下午和晚上学linux，争取学完shell。</p><p>（如果有时间看看wireshark抓包实战）</p><p>没有学完，学了一半，发现在虚拟机里面写太蛋疼了，要不断地释放鼠标，配置了XShell，用XShell写，美滋滋😋，然后配置了以下双十一白嫖的阿里服务器，也用XShell连接。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月22日</title>
      <link href="/2022/11/22/2022%E5%B9%B411%E6%9C%8822%E6%97%A5/"/>
      <url>/2022/11/22/2022%E5%B9%B411%E6%9C%8822%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>上午投简历，看黑马的测试入门课。静不下心来，几分钟就要看一次boss上有没有回复。</p><p>还是想去嵌入式，下午写了一份嵌入式的简历，学了一点python基础</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月21日</title>
      <link href="/2022/11/21/2022%E5%B9%B411%E6%9C%8821%E6%97%A5/"/>
      <url>/2022/11/21/2022%E5%B9%B411%E6%9C%8821%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>上午学完黑马软件测试day2。</p><p>中午boss上投了一波测试和C的工作。发现测试的话学一点python和selenium是很大的加分，C的话，还需要学linux C，最好加上网络编程，还是得学webserver项目。</p><p><strong>一点心得：boss必须得每天都投，不能想着学好再投，因为学好这个状态是达不到的。边学边投还能确定就业工作要啥样的技能，确定学习的方向。</strong></p><p>晚上优化了一下简历。学习黑马软件测试day3。</p><p>没学完……状态不太好，做核酸淋了雨，感觉要生病。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月20日</title>
      <link href="/2022/11/20/2022%E5%B9%B411%E6%9C%8820%E6%97%A5/"/>
      <url>/2022/11/20/2022%E5%B9%B411%E6%9C%8820%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>今天是效率低下的一天，因为打算做完CJSON项目的，结果这个项目对我还是有点难度，做的比较痛苦。</p><p>上午总觉得C的基础不太牢固，先是想找C的高级课程看看，然后又想着用C把数据结构再实现一遍。最后啥也没做好。</p><p>==反思：时间紧，项目难的话就先硬啃了，实在不行就做完再过一遍。另外CJSON其实还是能找到不少资料搭配着看的。==</p><p>晚上：学习软件测试理论。看了黑马的软件测试入门day1，还是有点收获的。</p><p><strong>一点小心得：还是得多刷面经，目前来看面试就没有超出过常规八股。而且我项目比较简单，也没什么好问的，基本上全程八股文。</strong></p><p>项目的话，必备的一个问题就是：<strong>你在做这个项目的时候遇到什么难点？你是怎么解决的？</strong>这个问题最好好好准备一下。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月19日</title>
      <link href="/2022/11/19/2022%E5%B9%B411%E6%9C%8819%E6%97%A5/"/>
      <url>/2022/11/19/2022%E5%B9%B411%E6%9C%8819%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>今天早上还是9点起床（纯废物）</p><p>今天主要学习51，跟着江科大的视频学，一边学一边跟着做，视频看了9P。</p><p>搭配着看《郭天祥  新概念51单片机C语言教程》，因为视频实践讲的比较多，理论知识讲的少了一点。</p><p>中午休息了以下，下午精神好多了，该休息还是得休息。</p><p>加油！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年11月18日</title>
      <link href="/2022/11/18/2022%E5%B9%B411%E6%9C%8818%E6%97%A5/"/>
      <url>/2022/11/18/2022%E5%B9%B411%E6%9C%8818%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>晚上睡的太晚了，早上九点才醒</p><p>上午继续cJSON项目</p><p>下午做了深圳飞音的笔试题，写了俩小时，离谱，写这个笔试题居然还要下载flash，flash不是早就凉了吗？！<br>前面题比较简单，但是最后的编程题有点难，还好是核心模式。第一次用C写题，感觉好受限制，C轮子太少了，没有哈希表，也没有封装好的快排。（Java的sort真是太好用了），C写的有点少，各种操作都不太熟悉。</p><p>晚上学了一点C++内存管理</p><hr><p>一点总结：<strong>QQ和微信还是少看比较好，只在特定的时间check</strong>，比如午饭时。QQ和微信信息密度很低，还容易导致注意力不集中，老是学一段时间就像看看。</p><p>==不要多线程工作！要专注投入！==</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日学习打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书籍推荐《Wirkshark网络分析就这么简单》</title>
      <link href="/2022/11/12/%E4%B9%A6%E7%B1%8D%E6%8E%A8%E8%8D%90/"/>
      <url>/2022/11/12/%E4%B9%A6%E7%B1%8D%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<p>特别好书，计算机网络一直对于我来说都有点抽象，总感觉隔着一层什么。看了这本书清晰多了，薄薄的一本，读起来也不会有太大压力。作者文笔很好，写得很有趣。没有什么比用wireshark动手实践学习得更深刻的了。这是我看过把计网讲过最好的书，多来点这样的书！</p><p>《计算机网络 自顶向下》尝试看过好多次，虽然也是经典书籍，但是太厚了，而且翻译的太生硬了，建议中英文版本对照着看。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新键盘</title>
      <link href="/2022/09/30/%E6%96%B0%E9%94%AE%E7%9B%98/"/>
      <url>/2022/09/30/%E6%96%B0%E9%94%AE%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<p>最近买了个机械键盘，nj80金粉轴🤗。颜值很高，但是价格也很高（贫穷）。在贴吧里做了功课，都很推荐nj80，于是就入手了。75%配列，数字小键盘我不也不怎么用，没有挺好的，但是没有Home，End，Ins键，这几个是写代码挺常用的键。</p><p>第一次用机械键盘，按捺不住好奇跟风买的，同时也思考机械键盘真的就比薄膜键盘要好吗？它的价格几乎是薄膜键盘的十倍以上了。</p><p>使用几天的体验是，确实比笔记本自带的薄膜键盘要好，但是没有十倍价格的好。</p><p>优点：</p><ul><li>打字轻松多了，自带薄膜键盘摁下去费不少力气。金粉轴轻轻一模就摁下去了。</li><li>屏幕可以放的比较远了，用笔记本键盘的话，屏幕会离得很近。</li></ul><p>缺点</p><ul><li>劈里啪啦的声音很吵</li><li>价格高<del>（这不是它的错，是我的错）</del></li><li>不防水防尘，可能还要配个腕撑</li></ul><hr><p>2022年10月10日更新：确实比薄膜键盘好用多了，用了机械就不想再去用薄膜键盘了。nj80，香！</p>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOSd的下载和安装</title>
      <link href="/2022/09/08/CentOSd%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/"/>
      <url>/2022/09/08/CentOSd%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOSd的下载和安装"><a href="#CentOSd的下载和安装" class="headerlink" title="CentOSd的下载和安装"></a>CentOSd的下载和安装</h1><p><a href="https://blog.csdn.net/weixin_45949103/article/details/121407744">参考这篇文章</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何进入BIOS</title>
      <link href="/2022/09/08/2022-09-08%20%E5%A6%82%E4%BD%95%E8%BF%9B%E5%85%A5BIOS/"/>
      <url>/2022/09/08/2022-09-08%20%E5%A6%82%E4%BD%95%E8%BF%9B%E5%85%A5BIOS/</url>
      
        <content type="html"><![CDATA[<h1 id="如何进入BIOS"><a href="#如何进入BIOS" class="headerlink" title="如何进入BIOS"></a>如何进入BIOS</h1><p>今天装了个虚拟机，想要用用CentOS，然后需要在电脑的BIOS中开启「虚拟化技术」。</p><p>然后就遇到了问题：不管是F10还是esc怎样都进不去BIOS。</p><p>几乎尝试了所有bing能够搜索到的方法。为此，还更新了BIOS，关闭了Win10快速启动，尝试了CMOS RESET都不行。</p><p>突然想到要不去B站看看，然后就在<a href="https://www.bilibili.com/video/BV1gJ411d7xB">这个视频</a>找到了解决方法。</p><blockquote><p>按着shift的同时点击开始菜单的重启键，依次点击疑难解答，高级选项，UEFI固件设置，重启就可以了。</p></blockquote><p>总结：遇到问题，不要只是在一个平台上找，多去几个平台上查查看。</p><p>（吐槽一句：惠普官方支持网站真垃圾。）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Javascript</title>
      <link href="/2022/01/17/2022-01-17%20JavasScript/"/>
      <url>/2022/01/17/2022-01-17%20JavasScript/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h3 id="什么是JavaScript，有什么用？"><a href="#什么是JavaScript，有什么用？" class="headerlink" title="什么是JavaScript，有什么用？"></a>什么是JavaScript，有什么用？</h3><p>JavaScript是<strong>运行在浏览器上的脚本语言</strong>，简称JS。</p><blockquote><p>背景：JavaScript是网景公司（NetScape）的 布兰登艾奇（JavaScript之父）开发的，最初叫做LiveScript。LiveScript的出现让浏览器更加的生动了，不再是单纯的静态页面了。页面更具有交互性。在历史的某个阶段，SUN公司和网景公司他们之间有合作关系，SUN公司把LiveScript的名字修改为JavaScript。</p></blockquote><h3 id="java与JavaScript的区别："><a href="#java与JavaScript的区别：" class="headerlink" title="java与JavaScript的区别："></a>java与JavaScript的区别：</h3><p>JavaScript这个名字中虽然带有“Java”，直译是“Java脚本”，但是跟Java没有任何关系😅，只是语法上优点类似（JavaScript名字只是蹭java的热度）。</p><p>他们运行的位置不同，目标程序保存的形式也不同【目标程序就是文件打开就能直接执行的程序】：</p><p><strong>Java运行在JVM当中，JavaScript运行在浏览器的内存当中。</strong>JavaScript程序不需要手动编译，<strong>编写完源代码之后，浏览器直接打开解释执行。</strong></p><p>JavaScript的“目标程序”以普通文本形式保存（用记事本就可以打开），这种语言都叫做“<strong>脚本语言</strong>”。</p><p>Java的目标程序以.class形式存在，不能使用文本编辑器打开，不是脚本语言。</p><p>（HelloWord.java——&gt;HelloWorld.class【目标程序】）</p><h3 id="JavaScript与jsp的区别："><a href="#JavaScript与jsp的区别：" class="headerlink" title="JavaScript与jsp的区别："></a>JavaScript与jsp的区别：</h3><p>JSP : JavaServer Pages（隶属于Java语言的，运行在JVM当中）</p><p>JS : JavaScript（脚本语言，运行在浏览器上）</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yml语法</title>
      <link href="/2022/01/16/2022-01-16%20yml%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/01/16/2022-01-16%20yml%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h1><p>今天再用hexo推送一篇博客的时候一直不成功，并且出现这个报错：</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">err: YAMLException: can not read a <span class="keyword">block</span> mapping <span class="built_in">entry</span>; a multiline key may not be an <span class="keyword">implicit</span> key at line x, column X</span><br></pre></td></tr></table></figure><p>发现问题：刚刚写的的markdown文件头部的tags: 后面忘了加空格。</p><h1 id="关于YML语言"><a href="#关于YML语言" class="headerlink" title="关于YML语言"></a>关于YML语言</h1><p>以前在项目里也有写过yml文件，但是现在只记得yml语言常常用来写配置文件，语法非常规整。然而好长时间没接触，现在已经完全没有什么印象了/(ㄒoㄒ)/~~，导致这个报错都看得一头雾水。所以写篇博客，以作警示：<strong>学习如逆水行舟，不进则退。以及，学过的东西，要多复习总结！</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/2022/01/16/2022-01-16%20%E5%88%9D%E8%AF%86HTML/"/>
      <url>/2022/01/16/2022-01-16%20%E5%88%9D%E8%AF%86HTML/</url>
      
        <content type="html"><![CDATA[<h1 id="初识HTML"><a href="#初识HTML" class="headerlink" title="初识HTML"></a>初识HTML</h1><p>这一篇是好久之前的笔记啦，当时看的是<a href="https://www.bilibili.com/video/BV11t411K74Q?p=4">动力结点杜聚宾老师的课</a>，重新回顾一下发到博客上来。</p><p>在学习HTML之前，先了解一下两种系统架构：</p><h3 id="系统结构：B-S架构和C-S架构"><a href="#系统结构：B-S架构和C-S架构" class="headerlink" title="系统结构：B/S架构和C/S架构"></a>系统结构：B/S架构和C/S架构</h3><h4 id="B-S架构："><a href="#B-S架构：" class="headerlink" title="B/S架构："></a>B/S架构：</h4><p><strong>==Browser / Server （浏览器/服务器的交互形式）==<strong>用户通过</strong>浏览器</strong>来访问。</p><p>Browser支持哪些语言：<code>HTML</code> <code>CSS</code> <code>JavaScript</code></p><p>Server即服务器端的语言很多：<code>C</code> <code>C++</code> <code>Java</code> <code>python</code>…..</p><h5 id="B-S架构的系统有什么优点和缺点？"><a href="#B-S架构的系统有什么优点和缺点？" class="headerlink" title="B/S架构的系统有什么优点和缺点？"></a>B/S架构的系统有什么优点和缺点？</h5><ul><li>优点：==升级方便，只升级服务器端代码即可，维护成本低。==</li><li>缺点：==速度慢、体验不好、界面不炫酷。==</li></ul><blockquote><p>企业内部的解决方案都是采用B/S架构的系统，因为企业内部办公需要的一些系统不需要炫酷，不需要特别好的用户体验，只要能做数据的增删改查即可。并且企业内部更注重维护的成本。</p></blockquote><h5 id="B-S架构的系统有哪些代表？"><a href="#B-S架构的系统有哪些代表？" class="headerlink" title="B/S架构的系统有哪些代表？"></a>B/S架构的系统有哪些代表？</h5><p>京东、百度、Google….</p><h4 id="C-S架构"><a href="#C-S架构" class="headerlink" title="C/S架构"></a>C/S架构</h4><p>Client / Server   （客户端/服务器端的交互形式）用户通过<strong>客户端</strong>来访问。</p><h5 id="C-S架构的系统有什么优点和缺点？"><a href="#C-S架构的系统有什么优点和缺点？" class="headerlink" title="C/S架构的系统有什么优点和缺点？"></a>C/S架构的系统有什么优点和缺点？</h5><ul><li>缺点：==升级麻烦，维护成本较高。==</li><li>优点：==速度快，体验好，界面炫酷。==（娱乐型的系统多数是C/S架构的）</li></ul><h5 id="常见的C-S架构的系统："><a href="#常见的C-S架构的系统：" class="headerlink" title="常见的C/S架构的系统："></a>常见的C/S架构的系统：</h5><p>QQ、微信、网易云….</p><p>想起来我在<a href="https://www.bilibili.com/video/BV1ux411G7Bs">数据库课程</a>上老师也讲过C/S架构和B/S架构，这是我当时记下的：</p><p><img src="/.io//CS%E6%9E%B6%E6%9E%84%E5%92%8CBS%E6%9E%B6%E6%9E%84.png" alt="CS架构和BS架构"></p><p>HTML就是在B/S架构中的Browser端发挥作用的。</p><h3 id="什么是HTML？"><a href="#什么是HTML？" class="headerlink" title="什么是HTML？"></a>什么是HTML？</h3><p>html：hyper text markup language，超文本标记语言</p><blockquote><p>==超文本？==</p><p>​            超级文本，例如流媒体，声音，视频，图片等。</p><p>==标记语言？==</p><p>​            这种语言是由<font color="#FF000">大量的标签</font>组成。</p><p>tip：任何一个标签都有<strong>开始标签</strong>和<strong>结束标签</strong>，例如：</p><p><code>&lt;标签&gt; </code> ：开始标签</p><p><code>&lt;/标签&gt;</code> ：结束标签【括号内起始位置增加一个反斜杠】</p></blockquote><h3 id="HTML是不是编程语言？"><a href="#HTML是不是编程语言？" class="headerlink" title="HTML是不是编程语言？"></a>HTML是不是编程语言？</h3><p>html严格意义上来只能说是一种规范，一种浏览器上的规范，标签语言，不能称为编程语言，因为html中没有变量、数据类型、控制语句if、for，这些都没有的。</p><blockquote><p>tip : HTML是标签语言，CSS是样式语言，都不是编程语言。只有JavaScript是编程语言。</p></blockquote><h3 id="HTML运行在哪？"><a href="#HTML运行在哪？" class="headerlink" title="HTML运行在哪？"></a>HTML运行在哪？</h3><p>运行在<strong>浏览器</strong>上，直接使用浏览器打开HTML文件就能运行。</p><h3 id="用什么开发？"><a href="#用什么开发？" class="headerlink" title="用什么开发？"></a>用什么开发？</h3><p>HTML开发的时候使用普通的文本编辑器就行，创建的文件扩展名是.html或者.htm</p><p>HTML也有专业的开发工具，例如：DreamWeaver、HBuilder…..</p><h3 id="HTML基本网页结构"><a href="#HTML基本网页结构" class="headerlink" title="HTML基本网页结构"></a>HTML基本网页结构</h3><p>文件格式：<code>xxx.html</code>（推荐）<code>xxx.htm</code></p><h5 id="HTML的基本组成？"><a href="#HTML的基本组成？" class="headerlink" title="HTML的基本组成？"></a>HTML的基本组成？</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一定有head和body两部分组成</p><p>!doctype声明：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注释代码--&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--声明式：不能显示（head中只有title里的内容可以在网页标题中显示）--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--设置网页编码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span>SEO </span><br><span class="line">    <span class="comment">&lt;!--关键词：是否能被搜索引擎搜到--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;学习html&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--描述：当搜到网页时，展示的简介内容--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;学习html非常好&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>my first html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--能够显示的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    my context</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>html不区分大小写，容错性很强</strong></p><h3 id="HTML是谁制定的？"><a href="#HTML是谁制定的？" class="headerlink" title="HTML是谁制定的？"></a>HTML是谁制定的？</h3><p><strong>W3C：世界万维网联盟（World Wide Web Consortium）</strong></p><p>W3C制定了HTML的规范，每个浏览器生产厂家都会遵守规范。HTML程序员也会按照这个规范去写代码。</p><p>W3C标准：</p><ul><li>具体的实现产品html css javascript</li><li>html版本</li><li>html和xhtml的区别</li><li>html内容的语义化</li></ul><p>HTML规范目前最高的版本是：HTML5.0，简称H5.</p><p>W3C制定了很多规范：HTML/XML/http协议/https协议……</p>]]></content>
      
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo基本使用指南</title>
      <link href="/2022/01/11/2022-01-11%20hexo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2022/01/11/2022-01-11%20hexo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>关于hexo，我曾在<a href="https://ruo-wei.github.io/2022/01/01/2020-01-01Hello/">第一篇</a>写过一些基本命令。</p><p>打算在这一篇写一些基本用法，其实基本上都可以在官方文档找到。在这里写下只是为了记录一下不断摸索的过程，其中参考了很多其他优秀的博客。</p><p>少女摸索中……会不断更新。</p><h1 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h1><h2 id="增加categories分类"><a href="#增加categories分类" class="headerlink" title="增加categories分类"></a>增加categories分类</h2><p><code>hexo n &quot;title&quot;</code> 新建的默认的页面抬头是这样的：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title:</span><br><span class="line">date:</span><br><span class="line"><span class="keyword">tags:</span> </span><br></pre></td></tr></table></figure><p>可以编辑标题、日期、标签和内容，但是没有分类的选项。可以打开<code>scaffolds/post.md</code>文件，在<code>tages:</code>上面加入<code>categories:</code>。</p><p>保存后，重新执行<code>hexo n &quot;title&quot;</code>命令，会发现新建的页面里有<code>categories:</code>项了。</p><p><strong>scaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。</strong></p><h2 id="设置Categories"><a href="#设置Categories" class="headerlink" title="设置Categories"></a>设置Categories</h2><p>在我们编辑文章的时候，直接在<code>categories:</code>项填写属于哪个分类，但如果分类是中文的时候，路径也会包含中文。<br>比如分类我们设置的是：</p><blockquote><p>categories: 编程</p></blockquote><p>那在生成页面后，分类列表就会出现<code>编程</code>这个选项，他的访问路径是：</p><blockquote><p>*/categories/编程</p></blockquote><p>如果我们想要把路径名和分类名分别设置，需要怎么办呢？</p><p>打开根目录下的配置文件<code>_config.yml</code>，找到如下位置做更改：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Category &amp; Tag</span></span><br><span class="line"><span class="symbol">default_category:</span> uncategorized</span><br><span class="line"><span class="symbol">category_map:</span></span><br><span class="line">编程: programming</span><br><span class="line">生活: life</span><br><span class="line">其他: other</span><br><span class="line"><span class="symbol">tag_map:</span></span><br></pre></td></tr></table></figure><p>在这里<code>category_map:</code>是设置分类的地方，每行一个分类，冒号前面是分类名称，后面是访问路径。</p><p>可以提前在这里设置好一些分类，当编辑的文章填写了对应的分类名时，就会自动的按照对应的路径来访问。</p><h2 id="给文章加标签"><a href="#给文章加标签" class="headerlink" title="给文章加标签"></a>给文章加标签</h2><p>在编辑文章的时候，<code>tags:</code>后面是设置标签的地方，如果有多个标签的话，可以用下面两种办法来设置：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tages: [标签1,标签2,...标签n]</span><br><span class="line"></span><br><span class="line"><span class="code"> tages: </span></span><br><span class="line"><span class="bullet">- </span>标签1</span><br><span class="line"><span class="bullet">- </span>标签2</span><br><span class="line"><span class="bullet">...</span></span><br><span class="line"><span class="bullet"></span><span class="bullet">- </span>标签n</span><br></pre></td></tr></table></figure><h2 id="文章保存为草稿"><a href="#文章保存为草稿" class="headerlink" title="文章保存为草稿"></a>文章保存为草稿</h2><p><a href="https://novnan.github.io/Hexo/hexo-draft/">来自于这里</a></p><p>作者是：novnan</p><ol><li>传统建立文章方式</li></ol><p>一般我们都会使用 <code>hexo new &lt;title&gt;</code> 来建立文章，这种建立方法会将新文章建立在 <code>source/_posts</code> 目录下。当使用 <code>hexo generate</code> 编译 markdown 文件时，会将其 HTML 结果编译在 <code>public</code> 目录下，之后 <code>hexo deploy</code> 将会把 <code>public</code> 目录下所有文章部署到 GitHub，这是我们熟悉的 Hexo 流程。</p><p>这种建立文章方式的缺点是：若我们同时编辑多篇文章，只要其中一篇文章尚未编辑完成，也会随着 <code>hexo deploy</code> 一起部署到 GitHub，也就是 GitHub 可能会看到我们尚未完成的文章。</p><ol start="2"><li>建立文章草稿</li></ol><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> draft &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure><p>Hexo 另外提供 <code>draft</code> 机制，它的原理是新文章将建立在 <code>source/_drafts</code> 目录下，因此 <code>hexo generate</code> 并不会将其编译到 <code>public</code> 目录下，所以 <code>hexo deploy</code> 也不会将其部署到 GitHub。</p><ol start="3"><li>本机预览草稿</li></ol><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo S <span class="comment">--draft</span></span><br></pre></td></tr></table></figure><p>虽然 <code>hexo generate</code> 不会编译 <code>source/_drafts</code> 目录下的文章，但 Hexo 的 <code>Hexo server</code> 另外提供 <code>--draft</code> 参数，这让我们只要搭配 <code>hexo-browsersync</code> plugins，就可以达到一边编辑 <code>markdown</code> 文章，一边使用浏览器预览的目的。</p><ol start="4"><li>将草稿发布为正式文章</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo P <span class="tag">&lt;<span class="name">filename</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中 <code>&lt;filename&gt;</code> 为不包含 <code>md</code> 后缀的文章名称。它的原理只是将文章从 <code>source/_drafts</code> 移动到 <code>source/_posts</code> 而已。</p><p>之后的 <code>hexo generate</code> 与 <code>hexo deploy</code> 的用法就完全一样了。</p><ol start="5"><li>将文章转为草稿</li></ol><p>若日后想将正式文章转为为草稿，只需手动将文章从 <code>source/_posts</code> 目录移动到 <code>source/_drafts</code> 目录即可。</p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><ol><li>安装插件</li></ol><p>cd到你hexo根目录里用cmd执行以下代码</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-<span class="built_in">image</span> --<span class="built_in">save</span></span><br></pre></td></tr></table></figure><ol start="2"><li>打开hexo的配置文件_config.yml，找到 post_asset_folder，把这个选项从false改成true。这样新建文章时，会自动生成和文章名相同的文件夹，这个文件夹专门用于存放文章图片。</li></ol><h2 id="更换Hexo博客网页图标"><a href="#更换Hexo博客网页图标" class="headerlink" title="更换Hexo博客网页图标"></a>更换Hexo博客网页图标</h2><p><a href="https://wangxiaoyu-go.github.io/2018/11/18/change-theme-favicon/">看这里</a></p><h1 id="深入一点"><a href="#深入一点" class="headerlink" title="深入一点"></a>深入一点</h1><h2 id="Hexo文件框架"><a href="#Hexo文件框架" class="headerlink" title="Hexo文件框架"></a>Hexo文件框架</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── node_modules：<span class="comment">#依赖包-安装插件及所需nodejs模块。</span></span><br><span class="line">├── public  <span class="comment">#最终网页信息。即存放被解析markdown、html文件。</span></span><br><span class="line">├── scaffolds <span class="comment">#模板文件夹。即当您新建文章时，根据scaffold生成文件。</span></span><br><span class="line">├── <span class="built_in">source</span>  <span class="comment">#资源文件夹。即存放用户资源。</span></span><br><span class="line">|   └── _posts <span class="comment">#博客文章目录。</span></span><br><span class="line">└── themes <span class="comment">#存放主题。Hexo根据主题生成静态页面。</span></span><br><span class="line">├── _config.yml   <span class="comment">#网站的配置信息。标题、网站名称等。</span></span><br><span class="line">├── db.json：<span class="comment">#source解析所得到的缓存文件。</span></span><br><span class="line">├── package.json  <span class="comment"># 应用程序信息。即配置Hexo运行需要js包。</span></span><br></pre></td></tr></table></figure><h2 id="Hexo原理"><a href="#Hexo原理" class="headerlink" title="Hexo原理"></a>Hexo原理</h2><p>Hexo是一个模板渲染引擎，可以将本地写好的markdown文本渲染为HTML、CSS等前端模板样式，然后推送到GitHub Pages，就可以访问了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>minimalism mindset</title>
      <link href="/2022/01/11/2022-01-06%20minimalist%20mindset/"/>
      <url>/2022/01/11/2022-01-06%20minimalist%20mindset/</url>
      
        <content type="html"><![CDATA[<h1 id="极简主义是一种思维方式"><a href="#极简主义是一种思维方式" class="headerlink" title="极简主义是一种思维方式"></a>极简主义是一种思维方式</h1><p><a href="https://manuelmoreale.com/thoughts/mgtm-introduction">看了这篇博文</a>，很有启发，极简主义对于作者来说并不是审美、设计或者生活方式，而是一种<strong>思维方式</strong>。</p><p>比如作者的衣橱极简，是由于ta的极简主义的思维导向的，因为ta极简主义的思维，所以ta在购买衣服的时候非常克制，只留下必要的，以至于ta的衣橱非常简洁。而不是因为ta是“极简主义者”才要衣橱极简。</p><blockquote><p>As an example, my wardrobe is “minimal” not because I am a minimalist. My wardrobe is minimal as a result of me applying a minimalist mindset when it comes to buying clothes. The two might look the same but there’s a subtle difference. I’ll explore the topic of clothing later in this guide but let me just say that in my case the goal is not to be a minimalist. The goal is to be functional and to optimise as much as possible. And the result of that is a minimal wardrobe.</p></blockquote><p>很多时候，人们在践行极简方面只做到了<strong>术</strong>，比如只能拥有100件以内的物品，再比如将自己的博客装饰成只有白底黑字（虽然确实很好看，但也缺失一些实用性的功能），却没有学到极简主义的<strong>道</strong>。至于极简主义的本质是什么，于我而言又是什么，我也还在摸索中。</p><p>这里补充一下在《Digital Minimalism》数字极简的定义：</p><blockquote><p>“数字极简主义是一门有关科技使用的哲学，其中，你要<strong>把网络在线时间聚焦在==少量经过精心挑选和优化的活动==<strong>上，这些活动将有力地帮助你去完成你认为</strong>真正有价值的事</strong>，然后愉快地错过其它所有的事。”</p></blockquote><p>我觉得在面对如今海量的互联网信息，面对这个充斥着消费和娱乐的世界，人的心灵也越来越躁动不安，欲望得到了无限的膨胀，或许极简主义才是解决之道。</p>]]></content>
      
      
      
        <tags>
            
            <tag> minimalism </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好呀</title>
      <link href="/2022/01/01/2022-01-01%20Hello/"/>
      <url>/2022/01/01/2022-01-01%20Hello/</url>
      
        <content type="html"><![CDATA[<h1 id="你好呀"><a href="#你好呀" class="headerlink" title="你好呀"></a>你好呀</h1><p>搭建好博客啦，接下来，打算陆续把以前的笔记整理搬运上来。</p><p>记录一下这次用GitHub pages建博客踩的坑：博客要推送到到gh-pages分支，而不是main分支，main分支是保存代码的。</p><p><a href="https://www.zhihu.com/question/317491354">在这里找到的答案</a></p><hr><p>以下是写博客的一些命令：</p><p><strong>写博客</strong>，在命令行输入：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="built_in">title</span></span><br></pre></td></tr></table></figure><p>如果标题包含空格的话，请使用引号括起来。</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">&quot;post title with whitespace&quot;</span></span><br></pre></td></tr></table></figure><p>然后就可以在source/_posts文件夹下生成 <code>博客名字.md</code>  文件。</p><p><strong>预览</strong>博客效果：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">server</span></span><br></pre></td></tr></table></figure><p>启动服务器，在本地浏览器的localhost:4000即可预览 </p><p>使用hexo<strong>发布</strong>的命令：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="variable">&amp;&amp;</span> hexo g <span class="variable">&amp;&amp;</span> hexo d</span><br></pre></td></tr></table></figure><ul><li><code>hexo clean</code> 清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</li><li>g是generate的简写，就是产生网页的意思</li><li>d是deploy的简写，就是部署网页的意思</li></ul><p>这里记录一下教训：有什么问题可以<strong>直接去看官方文档</strong>，人家已经写的非常清晰了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
